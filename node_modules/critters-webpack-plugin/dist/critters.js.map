{"version":3,"file":"critters.js","sources":["../src/dom.js","../src/css.js","../src/util.js","../src/index.js"],"sourcesContent":["/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\nimport { JSDOM } from 'jsdom';\n\n/**\n * Parse HTML into a mutable, serializable DOM Document, provided by JSDOM.\n * @private\n * @param {String} html   HTML to parse into a Document instance\n */\nexport function createDocument (html) {\n  const jsdom = new JSDOM(html, {\n    contentType: 'text/html'\n  });\n  const { window } = jsdom;\n  const document = window.document;\n  document.$jsdom = jsdom;\n  return document;\n}\n/**\n * Serialize a Document to an HTML String\n * @private\n * @param {Document} document   A Document, such as one created via `createDocument()`\n */\nexport function serializeDocument (document) {\n  return document.$jsdom.serialize();\n}\n\n/** Like node.textContent, except it works */\nexport function setNodeText (node, text) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  node.appendChild(node.ownerDocument.createTextNode(text));\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport css from 'css';\n\n/**\n * Parse a textual CSS Stylesheet into a Stylesheet instance.\n * Stylesheet is a mutable ReworkCSS AST with format similar to CSSOM.\n * @see https://github.com/reworkcss/css\n * @private\n * @param {String} stylesheet\n * @returns {css.Stylesheet} ast\n */\nexport function parseStylesheet (stylesheet) {\n  return css.parse(stylesheet);\n}\n\n/**\n * Serialize a ReworkCSS Stylesheet to a String of CSS.\n * @private\n * @param {css.Stylesheet} ast          A Stylesheet to serialize, such as one returned from `parseStylesheet()`\n * @param {Object} options              Options to pass to `css.stringify()`\n * @param {Boolean} [options.compress]  Compress CSS output (removes comments, whitespace, etc)\n */\nexport function serializeStylesheet (ast, options) {\n  return css.stringify(ast, options);\n}\n\n/**\n * Converts a walkStyleRules() iterator to mark nodes with `.$$remove=true` instead of actually removing them.\n * This means they can be removed in a second pass, allowing the first pass to be nondestructive (eg: to preserve mirrored sheets).\n * @private\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n * @returns {(rule) => void} nonDestructiveIterator\n */\nexport function markOnly (predicate) {\n  return rule => {\n    const sel = rule.selectors;\n    if (predicate(rule) === false) {\n      rule.$$remove = true;\n    }\n    rule.$$markedSelectors = rule.selectors;\n    if (rule._other) {\n      rule._other.$$markedSelectors = rule._other.selectors;\n    }\n    rule.selectors = sel;\n  };\n}\n\n/**\n * Apply filtered selectors to a rule from a previous markOnly run.\n * @private\n * @param {css.Rule} rule The Rule to apply marked selectors to (if they exist).\n*/\nexport function applyMarkedSelectors (rule) {\n  if (rule.$$markedSelectors) {\n    rule.selectors = rule.$$markedSelectors;\n  }\n  if (rule._other) {\n    applyMarkedSelectors(rule._other);\n  }\n}\n\n/**\n * Recursively walk all rules in a stylesheet.\n * @private\n * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node.\n */\nexport function walkStyleRules (node, iterator) {\n  if (node.stylesheet) return walkStyleRules(node.stylesheet, iterator);\n\n  node.rules = node.rules.filter(rule => {\n    if (rule.rules) {\n      walkStyleRules(rule, iterator);\n    }\n    rule._other = undefined;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\n\n/**\n * Recursively walk all rules in two identical stylesheets, filtering nodes into one or the other based on a predicate.\n * @private\n * @param {css.Rule} node       A Stylesheet or Rule to descend into.\n * @param {css.Rule} node2      A second tree identical to `node`\n * @param {Function} iterator   Invoked on each node in the tree. Return `false` to remove that node from the first tree, true to remove it from the second.\n */\nexport function walkStyleRulesWithReverseMirror (node, node2, iterator) {\n  if (node2 === null) return walkStyleRules(node, iterator);\n\n  if (node.stylesheet) return walkStyleRulesWithReverseMirror(node.stylesheet, node2.stylesheet, iterator);\n\n  [node.rules, node2.rules] = splitFilter(node.rules, node2.rules, (rule, index, rules, rules2) => {\n    const rule2 = rules2[index];\n    if (rule.rules) {\n      walkStyleRulesWithReverseMirror(rule, rule2, iterator);\n    }\n    rule._other = rule2;\n    rule.filterSelectors = filterSelectors;\n    return iterator(rule) !== false;\n  });\n}\n\n// Like [].filter(), but applies the opposite filtering result to a second copy of the Array without a second pass.\n// This is just a quicker version of generating the compliment of the set returned from a filter operation.\nfunction splitFilter (a, b, predicate) {\n  const aOut = [];\n  const bOut = [];\n  for (let index = 0; index < a.length; index++) {\n    if (predicate(a[index], index, a, b)) {\n      aOut.push(a[index]);\n    } else {\n      bOut.push(a[index]);\n    }\n  }\n  return [aOut, bOut];\n}\n\n// can be invoked on a style rule to subset its selectors (with reverse mirroring)\nfunction filterSelectors (predicate) {\n  if (this._other) {\n    const [a, b] = splitFilter(this.selectors, this._other.selectors, predicate);\n    this.selectors = a;\n    this._other.selectors = b;\n  } else {\n    this.selectors = this.selectors.filter(predicate);\n  }\n}\n","export function tap (inst, hook, pluginName, async, callback) {\n  if (inst.hooks) {\n    const camel = hook.replace(/-([a-z])/g, (s, i) => i.toUpperCase());\n    inst.hooks[camel][async ? 'tapAsync' : 'tap'](pluginName, callback);\n  } else {\n    inst.plugin(hook, callback);\n  }\n}\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport path from 'path';\nimport prettyBytes from 'pretty-bytes';\nimport sources from 'webpack-sources';\nimport postcss from 'postcss';\nimport cssnano from 'cssnano';\nimport log from 'webpack-log';\nimport minimatch from 'minimatch';\nimport { createDocument, serializeDocument, setNodeText } from './dom';\nimport { parseStylesheet, serializeStylesheet, walkStyleRules, walkStyleRulesWithReverseMirror, markOnly, applyMarkedSelectors } from './css';\nimport { tap } from './util';\n\n// Used to annotate this plugin's hooks in Tappable invocations\nconst PLUGIN_NAME = 'critters-webpack-plugin';\n\n/**\n * The mechanism to use for lazy-loading stylesheets.\n * _[JS]_ indicates that a strategy requires JavaScript (falls back to `<noscript>`).\n *\n * - **default:** Move stylesheet links to the end of the document and insert preload meta tags in their place.\n * - **\"body\":** Move all external stylesheet links to the end of the document.\n * - **\"media\":** Load stylesheets asynchronously by adding `media=\"not x\"` and removing once loaded. _[JS]_\n * - **\"swap\":** Convert stylesheet links to preloads that swap to `rel=\"stylesheet\"` once loaded. _[JS]_\n * - **\"js\":** Inject an asynchronous CSS loader similar to [LoadCSS](https://github.com/filamentgroup/loadCSS) and use it to load stylesheets. _[JS]_\n * - **\"js-lazy\":** Like `\"js\"`, but the stylesheet is disabled until fully loaded.\n * @typedef {(default|'body'|'media'|'swap'|'js'|'js-lazy')} PreloadStrategy\n * @public\n */\n\n/**\n * Controls which keyframes rules are inlined.\n *\n * - **\"critical\":** _(default)_ inline keyframes rules that are used by the critical CSS.\n * - **\"all\":** Inline all keyframes rules.\n * - **\"none\":** Remove all keyframes rules.\n * @typedef {('critical'|'all'|'none')} KeyframeStrategy\n * @private\n * @property {String} keyframes     Which {@link KeyframeStrategy keyframe strategy} to use (default: `critical`)_\n */\n\n/**\n * Controls log level of the plugin. Specifies the level the logger should use. A logger will\n * not produce output for any log level beneath the specified level. Available levels and order\n * are:\n *\n * - **\"info\"** _(default)_\n * - **\"warn\"**\n * - **\"error\"**\n * - **\"trace\"**\n * - **\"debug\"**\n * - **\"silent\"**\n * @typedef {('info'|'warn'|'error'|'trace'|'debug'|'silent')} LogLevel\n * @public\n */\n\n/**\n * All optional. Pass them to `new Critters({ ... })`.\n * @public\n * @typedef Options\n * @property {Boolean} external     Inline styles from external stylesheets _(default: `true`)_\n * @property {Number} inlineThreshold Inline external stylesheets smaller than a given size _(default: `0`)_\n * @property {Number} minimumExternalSize If the non-critical external stylesheet would be below this size, just inline it _(default: `0`)_\n * @property {Boolean} pruneSource  Remove inlined rules from the external stylesheet _(default: `true`)_\n * @property {Boolean} mergeStylesheets Merged inlined stylesheets into a single <style> tag _(default: `true`)_\n * @property {String[]} additionalStylesheets Glob for matching other stylesheets to be used while looking for critical CSS _(default: ``)_.\n * @property {String} preload       Which {@link PreloadStrategy preload strategy} to use\n * @property {Boolean} noscriptFallback Add `<noscript>` fallback to JS-based strategies\n * @property {Boolean} inlineFonts  Inline critical font-face rules _(default: `false`)_\n * @property {Boolean} preloadFonts Preloads critical fonts _(default: `true`)_\n * @property {Boolean} fonts        Shorthand for setting `inlineFonts`+`preloadFonts`\n *  - Values:\n *  - `true` to inline critical font-face rules and preload the fonts\n *  - `false` to don't inline any font-face rules and don't preload fonts\n * @property {String} keyframes     Controls which keyframes rules are inlined.\n *  - Values:\n *  - `\"critical\"`: _(default)_ inline keyframes rules used by the critical CSS\n *  - `\"all\"` inline all keyframes rules\n *  - `\"none\"` remove all keyframes rules\n * @property {Boolean} compress     Compress resulting critical CSS _(default: `true`)_\n * @property {String} logLevel      Controls {@link LogLevel log level} of the plugin _(default: `\"info\"`)_\n */\n\n/**\n * Create a Critters plugin instance with the given options.\n * @public\n * @param {Options} options Options to control how Critters inlines CSS.\n * @example\n * // webpack.config.js\n * module.exports = {\n *   plugins: [\n *     new Critters({\n *       // Outputs: <link rel=\"preload\" onload=\"this.rel='stylesheet'\">\n *       preload: 'swap',\n *\n *       // Don't inline critical font-face rules, but preload the font URLs:\n *       preloadFonts: true\n *     })\n *   ]\n * }\n */\nexport default class Critters {\n  /** @private */\n  constructor (options) {\n    this.options = Object.assign({ logLevel: 'info', externalStylesheets: [] }, options || {});\n    this.options.pruneSource = this.options.pruneSource !== false;\n    this.urlFilter = this.options.filter;\n    if (this.urlFilter instanceof RegExp) {\n      this.urlFilter = this.urlFilter.test.bind(this.urlFilter);\n    }\n    this.logger = log({ name: 'Critters', unique: true, level: this.options.logLevel });\n  }\n\n  /**\n   * Invoked by Webpack during plugin initialization\n   */\n  apply (compiler) {\n    // hook into the compiler to get a Compilation instance...\n    tap(compiler, 'compilation', PLUGIN_NAME, false, compilation => {\n      // ... which is how we get an \"after\" hook into html-webpack-plugin's HTML generation.\n      if (compilation.hooks && compilation.hooks.htmlWebpackPluginAfterHtmlProcessing) {\n        tap(compilation, 'html-webpack-plugin-after-html-processing', PLUGIN_NAME, true, (htmlPluginData, callback) => {\n          this.process(compiler, compilation, htmlPluginData.html)\n            .then(html => { callback(null, { html }); })\n            .catch(callback);\n        });\n      } else {\n        // If html-webpack-plugin isn't used, process the first HTML asset as an optimize step\n        tap(compilation, 'optimize-assets', PLUGIN_NAME, true, (assets, callback) => {\n          let htmlAssetName;\n          for (const name in assets) {\n            if (name.match(/\\.html$/)) {\n              htmlAssetName = name;\n              break;\n            }\n          }\n          if (!htmlAssetName) return callback(Error('Could not find HTML asset.'));\n          const html = assets[htmlAssetName].source();\n          if (!html) return callback(Error('Empty HTML asset.'));\n\n          this.process(compiler, compilation, String(html))\n            .then(html => {\n              assets[htmlAssetName] = new sources.RawSource(html);\n              callback();\n            })\n            .catch(callback);\n        });\n      }\n    });\n  }\n\n  /**\n   * Read the contents of a file from Webpack's input filesystem\n   */\n  readFile (compilation, filename) {\n    const fs = this.fs || compilation.outputFileSystem;\n    return new Promise((resolve, reject) => {\n      const callback = (err, data) => {\n        if (err) reject(err);\n        else resolve(data);\n      };\n      if (fs && fs.readFile) {\n        fs.readFile(filename, callback);\n      } else {\n        require('fs').readFile(filename, 'utf8', callback);\n      }\n    });\n  }\n\n  /**\n   * Apply critical CSS processing to html-webpack-plugin\n   */\n  async process (compiler, compilation, html) {\n    const outputPath = compiler.options.output.path;\n    const publicPath = compiler.options.output.publicPath;\n\n    // Parse the generated HTML in a DOM we can mutate\n    const document = createDocument(html);\n\n    if (this.options.additionalStylesheets) {\n      const styleSheetsIncluded = [];\n      (this.options.additionalStylesheets || []).forEach(cssFile => {\n        if (styleSheetsIncluded.includes(cssFile)) {\n          return;\n        }\n        styleSheetsIncluded.push(cssFile);\n        const webpackCssAssets = Object.keys(compilation.assets).filter(file => minimatch(file, cssFile));\n        webpackCssAssets.map(asset => {\n          const tag = document.createElement('style');\n          tag.innerHTML = compilation.assets[asset].source();\n          document.head.appendChild(tag);\n        });\n      });\n    }\n\n    // `external:false` skips processing of external sheets\n    if (this.options.external !== false) {\n      const externalSheets = [].slice.call(document.querySelectorAll('link[rel=\"stylesheet\"]'));\n      await Promise.all(externalSheets.map(\n        link => this.embedLinkedStylesheet(link, compilation, outputPath, publicPath)\n      ));\n    }\n\n    // go through all the style tags in the document and reduce them to only critical CSS\n    const styles = [].slice.call(document.querySelectorAll('style'));\n    await Promise.all(styles.map(\n      style => this.processStyle(style, document)\n    ));\n\n    if (this.options.mergeStylesheets !== false && styles.length !== 0) {\n      await this.mergeStylesheets(document);\n    }\n\n    // serialize the document back to HTML and we're done\n    return serializeDocument(document);\n  }\n\n  async mergeStylesheets (document) {\n    const styles = [].slice.call(document.querySelectorAll('style'));\n    if (styles.length === 0) {\n      this.logger.warn('Merging inline stylesheets into a single <style> tag skipped, no inline stylesheets to merge');\n      return;\n    }\n    const first = styles[0];\n    let sheet = first.textContent;\n    for (let i = 1; i < styles.length; i++) {\n      const node = styles[i];\n      sheet += node.textContent;\n      node.remove();\n    }\n    if (this.options.compress !== false) {\n      const before = sheet;\n      const processor = postcss([cssnano()]);\n      const result = await processor.process(before, { from: undefined });\n      // @todo sourcemap support (elsewhere first)\n      sheet = result.css;\n    }\n    setNodeText(first, sheet);\n  }\n\n  /**\n   * Inline the target stylesheet referred to by a <link rel=\"stylesheet\"> (assuming it passes `options.filter`)\n   */\n  async embedLinkedStylesheet (link, compilation, outputPath, publicPath) {\n    const href = link.getAttribute('href');\n    const media = link.getAttribute('media');\n    const document = link.ownerDocument;\n\n    const preloadMode = this.options.preload;\n\n    // skip filtered resources, or network resources if no filter is provided\n    if (this.urlFilter ? this.urlFilter(href) : href.match(/^(https?:)?\\/\\//)) return Promise.resolve();\n\n    // path on disk (with output.publicPath removed)\n    let normalizedPath = href.replace(/^\\//, '');\n    const pathPrefix = (publicPath || '').replace(/(^\\/|\\/$)/g, '') + '/';\n    if (normalizedPath.indexOf(pathPrefix) === 0) {\n      normalizedPath = normalizedPath.substring(pathPrefix.length).replace(/^\\//, '');\n    }\n    const filename = path.resolve(outputPath, normalizedPath);\n\n    // try to find a matching asset by filename in webpack's output (not yet written to disk)\n    const relativePath = path.relative(outputPath, filename).replace(/^\\.\\//, '');\n    const asset = compilation.assets[relativePath];\n\n    // Attempt to read from assets, falling back to a disk read\n    let sheet = asset && asset.source();\n    if (!sheet) {\n      try {\n        sheet = await this.readFile(compilation, filename);\n        this.logger.warn(`Stylesheet \"${relativePath}\" not found in assets, but a file was located on disk.${this.options.pruneSource ? ' This means pruneSource will not be applied.' : ''}`);\n      } catch (e) {\n        this.logger.warn(`Unable to locate stylesheet: ${relativePath}`);\n        return;\n      }\n    }\n\n    // CSS loader is only injected for the first sheet, then this becomes an empty string\n    let cssLoaderPreamble = `function $loadcss(u,m,l){(l=document.createElement('link')).rel='stylesheet';l.href=u;document.head.appendChild(l)}`;\n    const lazy = preloadMode === 'js-lazy';\n    if (lazy) {\n      cssLoaderPreamble = cssLoaderPreamble.replace('l.href', `l.media='only x';l.onload=function(){l.media=m};l.href`);\n    }\n\n    // the reduced critical CSS gets injected into a new <style> tag\n    const style = document.createElement('style');\n    style.appendChild(document.createTextNode(sheet));\n    link.parentNode.insertBefore(style, link);\n\n    if (this.options.inlineThreshold && sheet.length < this.options.inlineThreshold) {\n      style.$$reduce = false;\n      this.logger.info(`\\u001b[32mInlined all of ${href} (${sheet.length} was below the threshold of ${this.options.inlineThreshold})\\u001b[39m`);\n      if (asset) {\n        delete compilation.assets[relativePath];\n      } else {\n        this.logger.warn(`  > ${href} was not found in assets. the resource may still be emitted but will be unreferenced.`);\n      }\n      link.parentNode.removeChild(link);\n      return;\n    }\n\n    // drop references to webpack asset locations onto the tag, used for later reporting and in-place asset updates\n    style.$$name = href;\n    style.$$asset = asset;\n    style.$$assetName = relativePath;\n    style.$$assets = compilation.assets;\n    style.$$links = [link];\n\n    // Allow disabling any mutation of the stylesheet link:\n    if (preloadMode === false) return;\n\n    let noscriptFallback = false;\n\n    if (preloadMode === 'body') {\n      document.body.appendChild(link);\n    } else {\n      link.setAttribute('rel', 'preload');\n      link.setAttribute('as', 'style');\n      if (preloadMode === 'js' || preloadMode === 'js-lazy') {\n        const script = document.createElement('script');\n        const js = `${cssLoaderPreamble}$loadcss(${JSON.stringify(href)}${lazy ? (',' + JSON.stringify(media || 'all')) : ''})`;\n        script.appendChild(document.createTextNode(js));\n        link.parentNode.insertBefore(script, link.nextSibling);\n        style.$$links.push(script);\n        cssLoaderPreamble = '';\n        noscriptFallback = true;\n      } else if (preloadMode === 'media') {\n        // @see https://github.com/filamentgroup/loadCSS/blob/af1106cfe0bf70147e22185afa7ead96c01dec48/src/loadCSS.js#L26\n        link.setAttribute('rel', 'stylesheet');\n        link.removeAttribute('as');\n        link.setAttribute('media', 'only x');\n        link.setAttribute('onload', `this.media='${media || 'all'}'`);\n        noscriptFallback = true;\n      } else if (preloadMode === 'swap') {\n        link.setAttribute('onload', \"this.rel='stylesheet'\");\n        noscriptFallback = true;\n      } else {\n        const bodyLink = document.createElement('link');\n        bodyLink.setAttribute('rel', 'stylesheet');\n        if (media) bodyLink.setAttribute('media', media);\n        bodyLink.setAttribute('href', href);\n        document.body.appendChild(bodyLink);\n        style.$$links.push(bodyLink);\n      }\n    }\n\n    if (this.options.noscriptFallback !== false && noscriptFallback) {\n      const noscript = document.createElement('noscript');\n      const noscriptLink = document.createElement('link');\n      noscriptLink.setAttribute('rel', 'stylesheet');\n      noscriptLink.setAttribute('href', href);\n      if (media) noscriptLink.setAttribute('media', media);\n      noscript.appendChild(noscriptLink);\n      link.parentNode.insertBefore(noscript, link.nextSibling);\n      style.$$links.push(noscript);\n    }\n  }\n\n  /**\n   * Parse the stylesheet within a <style> element, then reduce it to contain only rules used by the document.\n   */\n  async processStyle (style) {\n    if (style.$$reduce === false) return;\n\n    const name = style.$$name ? style.$$name.replace(/^\\//, '') : 'inline CSS';\n    const options = this.options;\n    const document = style.ownerDocument;\n    const head = document.querySelector('head');\n    let keyframesMode = options.keyframes || 'critical';\n    // we also accept a boolean value for options.keyframes\n    if (keyframesMode === true) keyframesMode = 'all';\n    if (keyframesMode === false) keyframesMode = 'none';\n\n    // basically `.textContent`\n    let sheet = style.childNodes.length > 0 && [].map.call(style.childNodes, node => node.nodeValue).join('\\n');\n\n    // store a reference to the previous serialized stylesheet for reporting stats\n    const before = sheet;\n\n    // Skip empty stylesheets\n    if (!sheet) return;\n\n    const ast = parseStylesheet(sheet);\n    const astInverse = options.pruneSource ? parseStylesheet(sheet) : null;\n\n    // a string to search for font names (very loose)\n    let criticalFonts = '';\n\n    const failedSelectors = [];\n\n    const criticalKeyframeNames = [];\n\n    // Walk all CSS rules, marking unused rules with `.$$remove=true` for removal in the second pass.\n    // This first pass is also used to collect font and keyframe usage used in the second pass.\n    walkStyleRules(ast, markOnly(rule => {\n      if (rule.type === 'rule') {\n        // Filter the selector list down to only those match\n        rule.filterSelectors(sel => {\n          // Strip pseudo-elements and pseudo-classes, since we only care that their associated elements exist.\n          // This means any selector for a pseudo-element or having a pseudo-class will be inlined if the rest of the selector matches.\n          if (sel !== ':root') {\n            sel = sel.replace(/(?:>\\s*)?::?[a-z-]+\\s*(\\{|$)/gi, '$1').trim();\n          }\n          if (!sel) return false;\n\n          try {\n            return document.querySelector(sel) != null;\n          } catch (e) {\n            failedSelectors.push(sel + ' -> ' + e.message);\n            return false;\n          }\n        });\n        // If there are no matched selectors, remove the rule:\n        if (rule.selectors.length === 0) {\n          return false;\n        }\n\n        if (rule.declarations) {\n          for (let i = 0; i < rule.declarations.length; i++) {\n            const decl = rule.declarations[i];\n\n            // detect used fonts\n            if (decl.property && decl.property.match(/\\bfont(-family)?\\b/i)) {\n              criticalFonts += ' ' + decl.value;\n            }\n\n            // detect used keyframes\n            if (decl.property === 'animation' || decl.property === 'animation-name') {\n              // @todo: parse animation declarations and extract only the name. for now we'll do a lazy match.\n              const names = decl.value.split(/\\s+/);\n              for (let j = 0; j < names.length; j++) {\n                const name = names[j].trim();\n                if (name) criticalKeyframeNames.push(name);\n              }\n            }\n          }\n        }\n      }\n\n      // keep font rules, they're handled in the second pass:\n      if (rule.type === 'font-face') return;\n\n      // If there are no remaining rules, remove the whole rule:\n      const rules = rule.rules && rule.rules.filter(rule => !rule.$$remove);\n      return !rules || rules.length !== 0;\n    }));\n\n    if (failedSelectors.length !== 0) {\n      this.logger.warn(`${failedSelectors.length} rules skipped due to selector errors:\\n  ${failedSelectors.join('\\n  ')}`);\n    }\n\n    const shouldPreloadFonts = options.fonts === true || options.preloadFonts === true;\n    const shouldInlineFonts = options.fonts !== false && options.inlineFonts === true;\n\n    const preloadedFonts = [];\n    // Second pass, using data picked up from the first\n    walkStyleRulesWithReverseMirror(ast, astInverse, rule => {\n      // remove any rules marked in the first pass\n      if (rule.$$remove === true) return false;\n\n      applyMarkedSelectors(rule);\n\n      // prune @keyframes rules\n      if (rule.type === 'keyframes') {\n        if (keyframesMode === 'none') return false;\n        if (keyframesMode === 'all') return true;\n        return criticalKeyframeNames.indexOf(rule.name) !== -1;\n      }\n\n      // prune @font-face rules\n      if (rule.type === 'font-face') {\n        let family, src;\n        for (let i = 0; i < rule.declarations.length; i++) {\n          const decl = rule.declarations[i];\n          if (decl.property === 'src') {\n            // @todo parse this properly and generate multiple preloads with type=\"font/woff2\" etc\n            src = (decl.value.match(/url\\s*\\(\\s*(['\"]?)(.+?)\\1\\s*\\)/) || [])[2];\n          } else if (decl.property === 'font-family') {\n            family = decl.value;\n          }\n        }\n\n        if (src && shouldPreloadFonts && preloadedFonts.indexOf(src) === -1) {\n          preloadedFonts.push(src);\n          const preload = document.createElement('link');\n          preload.setAttribute('rel', 'preload');\n          preload.setAttribute('as', 'font');\n          preload.setAttribute('crossorigin', 'anonymous');\n          preload.setAttribute('href', src.trim());\n          head.appendChild(preload);\n        }\n\n        // if we're missing info, if the font is unused, or if critical font inlining is disabled, remove the rule:\n        if (!family || !src || criticalFonts.indexOf(family) === -1 || !shouldInlineFonts) return false;\n      }\n    });\n\n    sheet = serializeStylesheet(ast, { compress: this.options.compress !== false }).trim();\n\n    // If all rules were removed, get rid of the style element entirely\n    if (sheet.trim().length === 0) {\n      if (style.parentNode) {\n        style.parentNode.removeChild(style);\n      }\n      return;\n    }\n\n    let afterText = '';\n    if (options.pruneSource) {\n      const sheetInverse = serializeStylesheet(astInverse, { compress: this.options.compress !== false });\n      const asset = style.$$asset;\n      if (asset) {\n        // if external stylesheet would be below minimum size, just inline everything\n        const minSize = this.options.minimumExternalSize;\n        if (minSize && sheetInverse.length < minSize) {\n          this.logger.info(`\\u001b[32mInlined all of ${name} (non-critical external stylesheet would have been ${sheetInverse.length}b, which was below the threshold of ${minSize})\\u001b[39m`);\n          setNodeText(style, before);\n          // remove any associated external resources/loaders:\n          if (style.$$links) {\n            for (const link of style.$$links) {\n              const parent = link.parentNode;\n              if (parent) parent.removeChild(link);\n            }\n          }\n          // delete the webpack asset:\n          delete style.$$assets[style.$$assetName];\n          return;\n        }\n\n        const percent = sheetInverse.length / before.length * 100;\n        afterText = `, reducing non-inlined size ${percent | 0}% to ${prettyBytes(sheetInverse.length)}`;\n        style.$$assets[style.$$assetName] = new sources.LineToLineMappedSource(sheetInverse, style.$$assetName, before);\n      } else {\n        this.logger.warn('pruneSource is enabled, but a style (' + name + ') has no corresponding Webpack asset.');\n      }\n    }\n\n    // replace the inline stylesheet with its critical'd counterpart\n    setNodeText(style, sheet);\n\n    // output stats\n    const percent = sheet.length / before.length * 100 | 0;\n    this.logger.info('\\u001b[32mInlined ' + prettyBytes(sheet.length) + ' (' + percent + '% of original ' + prettyBytes(before.length) + ') of ' + name + afterText + '.\\u001b[39m');\n  }\n}\n"],"names":["const","jsdom","JSDOM","let","this","percent"],"mappings":"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"}